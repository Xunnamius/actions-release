# https://help.github.com/en/articles/metadata-syntax-for-github-actions

name: projector-pipeline
author: Xunnamius
description: >
  A collection of libraries powering the CI/CD pipeline used in various
  Projector-based projects

# https://haya14busa.github.io/github-action-brandings
branding:
  color: purple
  icon: cpu

inputs:
  action:
    description:
      '[string] The name of the component action to invoke. Can be one of:
      `audit`, `cleanup-npm`, `lint`, `metadata-collect`, `metadata-download`,
      `smart-deploy`, `test-integration-client`, `test-integration-externals`,
      `test-integration-node`, `test-integration-webpack`,
      `test-unit-then-build`, or `verify-release`'
    required: true
  options:
    description:
      '[json string] A serialized object containing configuration options for
      the invoked component action'
    required: false

outputs:
  should-skip-ci:
    description:
      "[boolean string] `'true'` if the CI and CD pipeline stages should be
      skipped; `'false'` otherwise. See also: `ciSkipRegex` in
      `pipeline.config.js`."
  should-skip-cd:
    description:
      "[boolean string] `'true'` if ONLY the CD pipeline stage should be
      skipped; `'false'` or empty otherwise. Always `'true'` when
      `should-skip-ci` is `'true'`. `'false'` otherwise. See also: `cdSkipRegex`
      in `pipeline.config.js`."
  node-version:
    description:
      '[semver string] The default Node version to be used by each stage. See
      also: `nodeCurrentVersion` in `pipeline.config.js`.'
  node-matrix:
    description:
      '[json string] A matrix defining a range of Node versions to test against.
      See also: `nodeTestVersions` and `nodeCurrentVersion` in
      `pipeline.config.js`.'
  webpack-matrix:
    description:
      '[json string] A matrix defining a range of Webpack versions to test
      against. See also: `webpackTestVersions` in `pipeline.config.js`.'
  commit-sha:
    description:
      '[string] The commit originally responsible for triggering the pipeline
      run.'
  current-branch:
    description:
      '[string] The branch that originally triggered the pipeline run.'
  pr-number:
    description:
      "[number|string] The GitHub PR number corresponding to this pipeline run
      or `'null'` if this run was not triggered by a PR."
  can-release:
    description:
      "[boolean string] `'true'` if this run was not triggered by a PR, the
      repository is in a whitelisted namespace/owner, and the GitHub user
      responsible for triggering the pipeline also has permission to approve a
      release. `'false'` otherwise. See `releaseRepoOwnerWhitelist` and
      `releaseActorWhitelist` in (global) `pipeline.config.js`."
  can-automerge:
    description:
      "[boolean string] `'true'` if this run was triggered by a PR and the
      GitHub actor responsible has explicit permission to merge PRs. `'false'`
      otherwise. See also: `automergeCanRetry` and `automergeActorWhitelist` in
      (global) `pipeline.config.js`."
  can-retry-automerge:
    description:
      "[boolean string] `'true'` if automatic merges can be retried. `'false'`
      otherwise. See also: `automergeCanRetry` in `pipeline.config.js`."
  can-upload-coverage:
    description:
      "[boolean string] `'true'` if the pipeline should attempt to upload
      coverage data at some point. `'false'` otherwise. See also:
      `uploadCodeCoverage` in `pipeline.config.js`."
  has-deploy:
    description:
      "[boolean string] `'true'` if a *deploy* script exists in the root
      `package.json` file. `'false'` otherwise."
  has-private:
    description:
      "[boolean string] `'true'` if the *private* key is `true` in the root
      `package.json` file. `'false'` otherwise."
  has-bin:
    description:
      "[boolean string] `'true'` if a *bin* key exists in the root
      `package.json` file. `'false'` otherwise."
  has-docs:
    description:
      "[boolean string] `'true'` if a *build-docs* script exists in the root
      `package.json` file. `'false'` otherwise."
  has-externals:
    description:
      "[boolean string] `'true'` if a *build-externals* script exists in the
      root `package.json` file. `'false'` otherwise."
  has-integration-node:
    description:
      "[boolean string] `'true'` if a *test-integration-node* script exists in
      the root `package.json` file. `'false'` otherwise."
  has-integration-externals:
    description:
      "[boolean string] `'true'` if a *test-integration-externals* script exists
      in the root `package.json` file. `'false'` otherwise."
  has-integration-client:
    description:
      "[boolean string] `'true'` if a *test-integration-client* script exists in
      the root `package.json` file. `'false'` otherwise."
  has-integration-webpack:
    description:
      "[boolean string] `'true'` if a *test-integration-webpack* script exists
      in the root `package.json` file. `'false'` otherwise."
  debug-string:
    description:
      '[string] A non-empty string if the pipeline is running in debugging mode.
      See also: `debug-string` in (local) `pipeline.config.js`.'
  committer-name:
    description:
      '[string] The name used by git during the CD stage. See also: `committer`
      in `pipeline.config.js`.'
  committer-email:
    description:
      '[string] The email used by git during the CD stage. See also: `committer`
      in `pipeline.config.js`.'
  retry-ceiling-seconds:
    description:
      '[number] The maximum number of seconds internal projector tasks allow
      themselves to run.'

runs:
  using: node12
  main: dist/action.js
